/*
 * This file is generated by jOOQ.
 */
package ru.tito.jooq.tables.records;


import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import ru.tito.jooq.tables.ActGeSchemaLog;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ActGeSchemaLogRecord extends UpdatableRecordImpl<ActGeSchemaLogRecord> implements Record3<String, LocalDateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>greygold.act_ge_schema_log.id_</code>.
     */
    public void setId_(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>greygold.act_ge_schema_log.id_</code>.
     */
    public String getId_() {
        return (String) get(0);
    }

    /**
     * Setter for <code>greygold.act_ge_schema_log.timestamp_</code>.
     */
    public void setTimestamp_(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>greygold.act_ge_schema_log.timestamp_</code>.
     */
    public LocalDateTime getTimestamp_() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>greygold.act_ge_schema_log.version_</code>.
     */
    public void setVersion_(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>greygold.act_ge_schema_log.version_</code>.
     */
    public String getVersion_() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, LocalDateTime, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, LocalDateTime, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return ActGeSchemaLog.ACT_GE_SCHEMA_LOG.ID_;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return ActGeSchemaLog.ACT_GE_SCHEMA_LOG.TIMESTAMP_;
    }

    @Override
    public Field<String> field3() {
        return ActGeSchemaLog.ACT_GE_SCHEMA_LOG.VERSION_;
    }

    @Override
    public String component1() {
        return getId_();
    }

    @Override
    public LocalDateTime component2() {
        return getTimestamp_();
    }

    @Override
    public String component3() {
        return getVersion_();
    }

    @Override
    public String value1() {
        return getId_();
    }

    @Override
    public LocalDateTime value2() {
        return getTimestamp_();
    }

    @Override
    public String value3() {
        return getVersion_();
    }

    @Override
    public ActGeSchemaLogRecord value1(String value) {
        setId_(value);
        return this;
    }

    @Override
    public ActGeSchemaLogRecord value2(LocalDateTime value) {
        setTimestamp_(value);
        return this;
    }

    @Override
    public ActGeSchemaLogRecord value3(String value) {
        setVersion_(value);
        return this;
    }

    @Override
    public ActGeSchemaLogRecord values(String value1, LocalDateTime value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ActGeSchemaLogRecord
     */
    public ActGeSchemaLogRecord() {
        super(ActGeSchemaLog.ACT_GE_SCHEMA_LOG);
    }

    /**
     * Create a detached, initialised ActGeSchemaLogRecord
     */
    public ActGeSchemaLogRecord(String id_, LocalDateTime timestamp_, String version_) {
        super(ActGeSchemaLog.ACT_GE_SCHEMA_LOG);

        setId_(id_);
        setTimestamp_(timestamp_);
        setVersion_(version_);
        resetChangedOnNotNull();
    }
}
