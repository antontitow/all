/*
 * This file is generated by jOOQ.
 */
package ru.tito.jooq.tables;


import java.util.Arrays;
import java.util.List;
import java.util.function.Function;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Function11;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Records;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.SelectField;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import ru.tito.jooq.Greygold;
import ru.tito.jooq.Indexes;
import ru.tito.jooq.Keys;
import ru.tito.jooq.tables.records.ActReCaseDefRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ActReCaseDef extends TableImpl<ActReCaseDefRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>greygold.act_re_case_def</code>
     */
    public static final ActReCaseDef ACT_RE_CASE_DEF = new ActReCaseDef();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ActReCaseDefRecord> getRecordType() {
        return ActReCaseDefRecord.class;
    }

    /**
     * The column <code>greygold.act_re_case_def.id_</code>.
     */
    public final TableField<ActReCaseDefRecord, String> ID_ = createField(DSL.name("id_"), SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>greygold.act_re_case_def.rev_</code>.
     */
    public final TableField<ActReCaseDefRecord, Integer> REV_ = createField(DSL.name("rev_"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>greygold.act_re_case_def.category_</code>.
     */
    public final TableField<ActReCaseDefRecord, String> CATEGORY_ = createField(DSL.name("category_"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>greygold.act_re_case_def.name_</code>.
     */
    public final TableField<ActReCaseDefRecord, String> NAME_ = createField(DSL.name("name_"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>greygold.act_re_case_def.key_</code>.
     */
    public final TableField<ActReCaseDefRecord, String> KEY_ = createField(DSL.name("key_"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>greygold.act_re_case_def.version_</code>.
     */
    public final TableField<ActReCaseDefRecord, Integer> VERSION_ = createField(DSL.name("version_"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>greygold.act_re_case_def.deployment_id_</code>.
     */
    public final TableField<ActReCaseDefRecord, String> DEPLOYMENT_ID_ = createField(DSL.name("deployment_id_"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>greygold.act_re_case_def.resource_name_</code>.
     */
    public final TableField<ActReCaseDefRecord, String> RESOURCE_NAME_ = createField(DSL.name("resource_name_"), SQLDataType.VARCHAR(4000), this, "");

    /**
     * The column <code>greygold.act_re_case_def.dgrm_resource_name_</code>.
     */
    public final TableField<ActReCaseDefRecord, String> DGRM_RESOURCE_NAME_ = createField(DSL.name("dgrm_resource_name_"), SQLDataType.VARCHAR(4000), this, "");

    /**
     * The column <code>greygold.act_re_case_def.tenant_id_</code>.
     */
    public final TableField<ActReCaseDefRecord, String> TENANT_ID_ = createField(DSL.name("tenant_id_"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>greygold.act_re_case_def.history_ttl_</code>.
     */
    public final TableField<ActReCaseDefRecord, Integer> HISTORY_TTL_ = createField(DSL.name("history_ttl_"), SQLDataType.INTEGER, this, "");

    private ActReCaseDef(Name alias, Table<ActReCaseDefRecord> aliased) {
        this(alias, aliased, null);
    }

    private ActReCaseDef(Name alias, Table<ActReCaseDefRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>greygold.act_re_case_def</code> table reference
     */
    public ActReCaseDef(String alias) {
        this(DSL.name(alias), ACT_RE_CASE_DEF);
    }

    /**
     * Create an aliased <code>greygold.act_re_case_def</code> table reference
     */
    public ActReCaseDef(Name alias) {
        this(alias, ACT_RE_CASE_DEF);
    }

    /**
     * Create a <code>greygold.act_re_case_def</code> table reference
     */
    public ActReCaseDef() {
        this(DSL.name("act_re_case_def"), null);
    }

    public <O extends Record> ActReCaseDef(Table<O> child, ForeignKey<O, ActReCaseDefRecord> key) {
        super(child, key, ACT_RE_CASE_DEF);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Greygold.GREYGOLD;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.ACT_IDX_CASE_DEF_TENANT_ID);
    }

    @Override
    public UniqueKey<ActReCaseDefRecord> getPrimaryKey() {
        return Keys.ACT_RE_CASE_DEF_PKEY;
    }

    @Override
    public ActReCaseDef as(String alias) {
        return new ActReCaseDef(DSL.name(alias), this);
    }

    @Override
    public ActReCaseDef as(Name alias) {
        return new ActReCaseDef(alias, this);
    }

    @Override
    public ActReCaseDef as(Table<?> alias) {
        return new ActReCaseDef(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public ActReCaseDef rename(String name) {
        return new ActReCaseDef(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ActReCaseDef rename(Name name) {
        return new ActReCaseDef(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public ActReCaseDef rename(Table<?> name) {
        return new ActReCaseDef(name.getQualifiedName(), null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<String, Integer, String, String, String, Integer, String, String, String, String, Integer> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Function)}.
     */
    public <U> SelectField<U> mapping(Function11<? super String, ? super Integer, ? super String, ? super String, ? super String, ? super Integer, ? super String, ? super String, ? super String, ? super String, ? super Integer, ? extends U> from) {
        return convertFrom(Records.mapping(from));
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Class,
     * Function)}.
     */
    public <U> SelectField<U> mapping(Class<U> toType, Function11<? super String, ? super Integer, ? super String, ? super String, ? super String, ? super Integer, ? super String, ? super String, ? super String, ? super String, ? super Integer, ? extends U> from) {
        return convertFrom(toType, Records.mapping(from));
    }
}
