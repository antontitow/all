/*
 * This file is generated by jOOQ.
 */
package ru.tito.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.function.Function;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Function17;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Records;
import org.jooq.Row17;
import org.jooq.Schema;
import org.jooq.SelectField;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import ru.tito.jooq.Greygold;
import ru.tito.jooq.Indexes;
import ru.tito.jooq.Keys;
import ru.tito.jooq.tables.records.ActHiDecOutRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ActHiDecOut extends TableImpl<ActHiDecOutRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>greygold.act_hi_dec_out</code>
     */
    public static final ActHiDecOut ACT_HI_DEC_OUT = new ActHiDecOut();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ActHiDecOutRecord> getRecordType() {
        return ActHiDecOutRecord.class;
    }

    /**
     * The column <code>greygold.act_hi_dec_out.id_</code>.
     */
    public final TableField<ActHiDecOutRecord, String> ID_ = createField(DSL.name("id_"), SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>greygold.act_hi_dec_out.dec_inst_id_</code>.
     */
    public final TableField<ActHiDecOutRecord, String> DEC_INST_ID_ = createField(DSL.name("dec_inst_id_"), SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>greygold.act_hi_dec_out.clause_id_</code>.
     */
    public final TableField<ActHiDecOutRecord, String> CLAUSE_ID_ = createField(DSL.name("clause_id_"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>greygold.act_hi_dec_out.clause_name_</code>.
     */
    public final TableField<ActHiDecOutRecord, String> CLAUSE_NAME_ = createField(DSL.name("clause_name_"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>greygold.act_hi_dec_out.rule_id_</code>.
     */
    public final TableField<ActHiDecOutRecord, String> RULE_ID_ = createField(DSL.name("rule_id_"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>greygold.act_hi_dec_out.rule_order_</code>.
     */
    public final TableField<ActHiDecOutRecord, Integer> RULE_ORDER_ = createField(DSL.name("rule_order_"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>greygold.act_hi_dec_out.var_name_</code>.
     */
    public final TableField<ActHiDecOutRecord, String> VAR_NAME_ = createField(DSL.name("var_name_"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>greygold.act_hi_dec_out.var_type_</code>.
     */
    public final TableField<ActHiDecOutRecord, String> VAR_TYPE_ = createField(DSL.name("var_type_"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>greygold.act_hi_dec_out.bytearray_id_</code>.
     */
    public final TableField<ActHiDecOutRecord, String> BYTEARRAY_ID_ = createField(DSL.name("bytearray_id_"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>greygold.act_hi_dec_out.double_</code>.
     */
    public final TableField<ActHiDecOutRecord, Double> DOUBLE_ = createField(DSL.name("double_"), SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>greygold.act_hi_dec_out.long_</code>.
     */
    public final TableField<ActHiDecOutRecord, Long> LONG_ = createField(DSL.name("long_"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>greygold.act_hi_dec_out.text_</code>.
     */
    public final TableField<ActHiDecOutRecord, String> TEXT_ = createField(DSL.name("text_"), SQLDataType.VARCHAR(4000), this, "");

    /**
     * The column <code>greygold.act_hi_dec_out.text2_</code>.
     */
    public final TableField<ActHiDecOutRecord, String> TEXT2_ = createField(DSL.name("text2_"), SQLDataType.VARCHAR(4000), this, "");

    /**
     * The column <code>greygold.act_hi_dec_out.tenant_id_</code>.
     */
    public final TableField<ActHiDecOutRecord, String> TENANT_ID_ = createField(DSL.name("tenant_id_"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>greygold.act_hi_dec_out.create_time_</code>.
     */
    public final TableField<ActHiDecOutRecord, LocalDateTime> CREATE_TIME_ = createField(DSL.name("create_time_"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>greygold.act_hi_dec_out.root_proc_inst_id_</code>.
     */
    public final TableField<ActHiDecOutRecord, String> ROOT_PROC_INST_ID_ = createField(DSL.name("root_proc_inst_id_"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>greygold.act_hi_dec_out.removal_time_</code>.
     */
    public final TableField<ActHiDecOutRecord, LocalDateTime> REMOVAL_TIME_ = createField(DSL.name("removal_time_"), SQLDataType.LOCALDATETIME(6), this, "");

    private ActHiDecOut(Name alias, Table<ActHiDecOutRecord> aliased) {
        this(alias, aliased, null);
    }

    private ActHiDecOut(Name alias, Table<ActHiDecOutRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>greygold.act_hi_dec_out</code> table reference
     */
    public ActHiDecOut(String alias) {
        this(DSL.name(alias), ACT_HI_DEC_OUT);
    }

    /**
     * Create an aliased <code>greygold.act_hi_dec_out</code> table reference
     */
    public ActHiDecOut(Name alias) {
        this(alias, ACT_HI_DEC_OUT);
    }

    /**
     * Create a <code>greygold.act_hi_dec_out</code> table reference
     */
    public ActHiDecOut() {
        this(DSL.name("act_hi_dec_out"), null);
    }

    public <O extends Record> ActHiDecOut(Table<O> child, ForeignKey<O, ActHiDecOutRecord> key) {
        super(child, key, ACT_HI_DEC_OUT);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Greygold.GREYGOLD;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.ACT_IDX_HI_DEC_OUT_INST, Indexes.ACT_IDX_HI_DEC_OUT_RM_TIME, Indexes.ACT_IDX_HI_DEC_OUT_ROOT_PI, Indexes.ACT_IDX_HI_DEC_OUT_RULE);
    }

    @Override
    public UniqueKey<ActHiDecOutRecord> getPrimaryKey() {
        return Keys.ACT_HI_DEC_OUT_PKEY;
    }

    @Override
    public ActHiDecOut as(String alias) {
        return new ActHiDecOut(DSL.name(alias), this);
    }

    @Override
    public ActHiDecOut as(Name alias) {
        return new ActHiDecOut(alias, this);
    }

    @Override
    public ActHiDecOut as(Table<?> alias) {
        return new ActHiDecOut(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public ActHiDecOut rename(String name) {
        return new ActHiDecOut(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ActHiDecOut rename(Name name) {
        return new ActHiDecOut(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public ActHiDecOut rename(Table<?> name) {
        return new ActHiDecOut(name.getQualifiedName(), null);
    }

    // -------------------------------------------------------------------------
    // Row17 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row17<String, String, String, String, String, Integer, String, String, String, Double, Long, String, String, String, LocalDateTime, String, LocalDateTime> fieldsRow() {
        return (Row17) super.fieldsRow();
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Function)}.
     */
    public <U> SelectField<U> mapping(Function17<? super String, ? super String, ? super String, ? super String, ? super String, ? super Integer, ? super String, ? super String, ? super String, ? super Double, ? super Long, ? super String, ? super String, ? super String, ? super LocalDateTime, ? super String, ? super LocalDateTime, ? extends U> from) {
        return convertFrom(Records.mapping(from));
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Class,
     * Function)}.
     */
    public <U> SelectField<U> mapping(Class<U> toType, Function17<? super String, ? super String, ? super String, ? super String, ? super String, ? super Integer, ? super String, ? super String, ? super String, ? super Double, ? super Long, ? super String, ? super String, ? super String, ? super LocalDateTime, ? super String, ? super LocalDateTime, ? extends U> from) {
        return convertFrom(toType, Records.mapping(from));
    }
}
