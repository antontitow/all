/*
 * This file is generated by jOOQ.
 */
package ru.tito.jooq.tables;


import java.util.Arrays;
import java.util.List;
import java.util.function.Function;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Function13;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Records;
import org.jooq.Row13;
import org.jooq.Schema;
import org.jooq.SelectField;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import ru.tito.jooq.Greygold;
import ru.tito.jooq.Indexes;
import ru.tito.jooq.Keys;
import ru.tito.jooq.tables.records.ActRuCaseSentryPartRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ActRuCaseSentryPart extends TableImpl<ActRuCaseSentryPartRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>greygold.act_ru_case_sentry_part</code>
     */
    public static final ActRuCaseSentryPart ACT_RU_CASE_SENTRY_PART = new ActRuCaseSentryPart();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ActRuCaseSentryPartRecord> getRecordType() {
        return ActRuCaseSentryPartRecord.class;
    }

    /**
     * The column <code>greygold.act_ru_case_sentry_part.id_</code>.
     */
    public final TableField<ActRuCaseSentryPartRecord, String> ID_ = createField(DSL.name("id_"), SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>greygold.act_ru_case_sentry_part.rev_</code>.
     */
    public final TableField<ActRuCaseSentryPartRecord, Integer> REV_ = createField(DSL.name("rev_"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>greygold.act_ru_case_sentry_part.case_inst_id_</code>.
     */
    public final TableField<ActRuCaseSentryPartRecord, String> CASE_INST_ID_ = createField(DSL.name("case_inst_id_"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>greygold.act_ru_case_sentry_part.case_exec_id_</code>.
     */
    public final TableField<ActRuCaseSentryPartRecord, String> CASE_EXEC_ID_ = createField(DSL.name("case_exec_id_"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>greygold.act_ru_case_sentry_part.sentry_id_</code>.
     */
    public final TableField<ActRuCaseSentryPartRecord, String> SENTRY_ID_ = createField(DSL.name("sentry_id_"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>greygold.act_ru_case_sentry_part.type_</code>.
     */
    public final TableField<ActRuCaseSentryPartRecord, String> TYPE_ = createField(DSL.name("type_"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column
     * <code>greygold.act_ru_case_sentry_part.source_case_exec_id_</code>.
     */
    public final TableField<ActRuCaseSentryPartRecord, String> SOURCE_CASE_EXEC_ID_ = createField(DSL.name("source_case_exec_id_"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>greygold.act_ru_case_sentry_part.standard_event_</code>.
     */
    public final TableField<ActRuCaseSentryPartRecord, String> STANDARD_EVENT_ = createField(DSL.name("standard_event_"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>greygold.act_ru_case_sentry_part.source_</code>.
     */
    public final TableField<ActRuCaseSentryPartRecord, String> SOURCE_ = createField(DSL.name("source_"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>greygold.act_ru_case_sentry_part.variable_event_</code>.
     */
    public final TableField<ActRuCaseSentryPartRecord, String> VARIABLE_EVENT_ = createField(DSL.name("variable_event_"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>greygold.act_ru_case_sentry_part.variable_name_</code>.
     */
    public final TableField<ActRuCaseSentryPartRecord, String> VARIABLE_NAME_ = createField(DSL.name("variable_name_"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>greygold.act_ru_case_sentry_part.satisfied_</code>.
     */
    public final TableField<ActRuCaseSentryPartRecord, Boolean> SATISFIED_ = createField(DSL.name("satisfied_"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>greygold.act_ru_case_sentry_part.tenant_id_</code>.
     */
    public final TableField<ActRuCaseSentryPartRecord, String> TENANT_ID_ = createField(DSL.name("tenant_id_"), SQLDataType.VARCHAR(64), this, "");

    private ActRuCaseSentryPart(Name alias, Table<ActRuCaseSentryPartRecord> aliased) {
        this(alias, aliased, null);
    }

    private ActRuCaseSentryPart(Name alias, Table<ActRuCaseSentryPartRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>greygold.act_ru_case_sentry_part</code> table
     * reference
     */
    public ActRuCaseSentryPart(String alias) {
        this(DSL.name(alias), ACT_RU_CASE_SENTRY_PART);
    }

    /**
     * Create an aliased <code>greygold.act_ru_case_sentry_part</code> table
     * reference
     */
    public ActRuCaseSentryPart(Name alias) {
        this(alias, ACT_RU_CASE_SENTRY_PART);
    }

    /**
     * Create a <code>greygold.act_ru_case_sentry_part</code> table reference
     */
    public ActRuCaseSentryPart() {
        this(DSL.name("act_ru_case_sentry_part"), null);
    }

    public <O extends Record> ActRuCaseSentryPart(Table<O> child, ForeignKey<O, ActRuCaseSentryPartRecord> key) {
        super(child, key, ACT_RU_CASE_SENTRY_PART);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Greygold.GREYGOLD;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.ACT_IDX_CASE_SENTRY_CASE_EXEC, Indexes.ACT_IDX_CASE_SENTRY_CASE_INST);
    }

    @Override
    public UniqueKey<ActRuCaseSentryPartRecord> getPrimaryKey() {
        return Keys.ACT_RU_CASE_SENTRY_PART_PKEY;
    }

    @Override
    public List<ForeignKey<ActRuCaseSentryPartRecord, ?>> getReferences() {
        return Arrays.asList(Keys.ACT_RU_CASE_SENTRY_PART__ACT_FK_CASE_SENTRY_CASE_INST, Keys.ACT_RU_CASE_SENTRY_PART__ACT_FK_CASE_SENTRY_CASE_EXEC);
    }

    private transient ActRuCaseExecution _actFkCaseSentryCaseInst;
    private transient ActRuCaseExecution _actFkCaseSentryCaseExec;

    /**
     * Get the implicit join path to the
     * <code>greygold.act_ru_case_execution</code> table, via the
     * <code>act_fk_case_sentry_case_inst</code> key.
     */
    public ActRuCaseExecution actFkCaseSentryCaseInst() {
        if (_actFkCaseSentryCaseInst == null)
            _actFkCaseSentryCaseInst = new ActRuCaseExecution(this, Keys.ACT_RU_CASE_SENTRY_PART__ACT_FK_CASE_SENTRY_CASE_INST);

        return _actFkCaseSentryCaseInst;
    }

    /**
     * Get the implicit join path to the
     * <code>greygold.act_ru_case_execution</code> table, via the
     * <code>act_fk_case_sentry_case_exec</code> key.
     */
    public ActRuCaseExecution actFkCaseSentryCaseExec() {
        if (_actFkCaseSentryCaseExec == null)
            _actFkCaseSentryCaseExec = new ActRuCaseExecution(this, Keys.ACT_RU_CASE_SENTRY_PART__ACT_FK_CASE_SENTRY_CASE_EXEC);

        return _actFkCaseSentryCaseExec;
    }

    @Override
    public ActRuCaseSentryPart as(String alias) {
        return new ActRuCaseSentryPart(DSL.name(alias), this);
    }

    @Override
    public ActRuCaseSentryPart as(Name alias) {
        return new ActRuCaseSentryPart(alias, this);
    }

    @Override
    public ActRuCaseSentryPart as(Table<?> alias) {
        return new ActRuCaseSentryPart(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public ActRuCaseSentryPart rename(String name) {
        return new ActRuCaseSentryPart(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ActRuCaseSentryPart rename(Name name) {
        return new ActRuCaseSentryPart(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public ActRuCaseSentryPart rename(Table<?> name) {
        return new ActRuCaseSentryPart(name.getQualifiedName(), null);
    }

    // -------------------------------------------------------------------------
    // Row13 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row13<String, Integer, String, String, String, String, String, String, String, String, String, Boolean, String> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Function)}.
     */
    public <U> SelectField<U> mapping(Function13<? super String, ? super Integer, ? super String, ? super String, ? super String, ? super String, ? super String, ? super String, ? super String, ? super String, ? super String, ? super Boolean, ? super String, ? extends U> from) {
        return convertFrom(Records.mapping(from));
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Class,
     * Function)}.
     */
    public <U> SelectField<U> mapping(Class<U> toType, Function13<? super String, ? super Integer, ? super String, ? super String, ? super String, ? super String, ? super String, ? super String, ? super String, ? super String, ? super String, ? super Boolean, ? super String, ? extends U> from) {
        return convertFrom(toType, Records.mapping(from));
    }
}
