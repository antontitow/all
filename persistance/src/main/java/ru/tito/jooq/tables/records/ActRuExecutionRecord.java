/*
 * This file is generated by jOOQ.
 */
package ru.tito.jooq.tables.records;


import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record20;
import org.jooq.Row20;
import org.jooq.impl.UpdatableRecordImpl;

import ru.tito.jooq.tables.ActRuExecution;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ActRuExecutionRecord extends UpdatableRecordImpl<ActRuExecutionRecord> implements Record20<String, Integer, String, String, String, String, String, String, String, String, String, String, Boolean, Boolean, Boolean, Boolean, Integer, Integer, Long, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>greygold.act_ru_execution.id_</code>.
     */
    public void setId_(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>greygold.act_ru_execution.id_</code>.
     */
    public String getId_() {
        return (String) get(0);
    }

    /**
     * Setter for <code>greygold.act_ru_execution.rev_</code>.
     */
    public void setRev_(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>greygold.act_ru_execution.rev_</code>.
     */
    public Integer getRev_() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>greygold.act_ru_execution.root_proc_inst_id_</code>.
     */
    public void setRootProcInstId_(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>greygold.act_ru_execution.root_proc_inst_id_</code>.
     */
    public String getRootProcInstId_() {
        return (String) get(2);
    }

    /**
     * Setter for <code>greygold.act_ru_execution.proc_inst_id_</code>.
     */
    public void setProcInstId_(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>greygold.act_ru_execution.proc_inst_id_</code>.
     */
    public String getProcInstId_() {
        return (String) get(3);
    }

    /**
     * Setter for <code>greygold.act_ru_execution.business_key_</code>.
     */
    public void setBusinessKey_(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>greygold.act_ru_execution.business_key_</code>.
     */
    public String getBusinessKey_() {
        return (String) get(4);
    }

    /**
     * Setter for <code>greygold.act_ru_execution.parent_id_</code>.
     */
    public void setParentId_(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>greygold.act_ru_execution.parent_id_</code>.
     */
    public String getParentId_() {
        return (String) get(5);
    }

    /**
     * Setter for <code>greygold.act_ru_execution.proc_def_id_</code>.
     */
    public void setProcDefId_(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>greygold.act_ru_execution.proc_def_id_</code>.
     */
    public String getProcDefId_() {
        return (String) get(6);
    }

    /**
     * Setter for <code>greygold.act_ru_execution.super_exec_</code>.
     */
    public void setSuperExec_(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>greygold.act_ru_execution.super_exec_</code>.
     */
    public String getSuperExec_() {
        return (String) get(7);
    }

    /**
     * Setter for <code>greygold.act_ru_execution.super_case_exec_</code>.
     */
    public void setSuperCaseExec_(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>greygold.act_ru_execution.super_case_exec_</code>.
     */
    public String getSuperCaseExec_() {
        return (String) get(8);
    }

    /**
     * Setter for <code>greygold.act_ru_execution.case_inst_id_</code>.
     */
    public void setCaseInstId_(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>greygold.act_ru_execution.case_inst_id_</code>.
     */
    public String getCaseInstId_() {
        return (String) get(9);
    }

    /**
     * Setter for <code>greygold.act_ru_execution.act_id_</code>.
     */
    public void setActId_(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>greygold.act_ru_execution.act_id_</code>.
     */
    public String getActId_() {
        return (String) get(10);
    }

    /**
     * Setter for <code>greygold.act_ru_execution.act_inst_id_</code>.
     */
    public void setActInstId_(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>greygold.act_ru_execution.act_inst_id_</code>.
     */
    public String getActInstId_() {
        return (String) get(11);
    }

    /**
     * Setter for <code>greygold.act_ru_execution.is_active_</code>.
     */
    public void setIsActive_(Boolean value) {
        set(12, value);
    }

    /**
     * Getter for <code>greygold.act_ru_execution.is_active_</code>.
     */
    public Boolean getIsActive_() {
        return (Boolean) get(12);
    }

    /**
     * Setter for <code>greygold.act_ru_execution.is_concurrent_</code>.
     */
    public void setIsConcurrent_(Boolean value) {
        set(13, value);
    }

    /**
     * Getter for <code>greygold.act_ru_execution.is_concurrent_</code>.
     */
    public Boolean getIsConcurrent_() {
        return (Boolean) get(13);
    }

    /**
     * Setter for <code>greygold.act_ru_execution.is_scope_</code>.
     */
    public void setIsScope_(Boolean value) {
        set(14, value);
    }

    /**
     * Getter for <code>greygold.act_ru_execution.is_scope_</code>.
     */
    public Boolean getIsScope_() {
        return (Boolean) get(14);
    }

    /**
     * Setter for <code>greygold.act_ru_execution.is_event_scope_</code>.
     */
    public void setIsEventScope_(Boolean value) {
        set(15, value);
    }

    /**
     * Getter for <code>greygold.act_ru_execution.is_event_scope_</code>.
     */
    public Boolean getIsEventScope_() {
        return (Boolean) get(15);
    }

    /**
     * Setter for <code>greygold.act_ru_execution.suspension_state_</code>.
     */
    public void setSuspensionState_(Integer value) {
        set(16, value);
    }

    /**
     * Getter for <code>greygold.act_ru_execution.suspension_state_</code>.
     */
    public Integer getSuspensionState_() {
        return (Integer) get(16);
    }

    /**
     * Setter for <code>greygold.act_ru_execution.cached_ent_state_</code>.
     */
    public void setCachedEntState_(Integer value) {
        set(17, value);
    }

    /**
     * Getter for <code>greygold.act_ru_execution.cached_ent_state_</code>.
     */
    public Integer getCachedEntState_() {
        return (Integer) get(17);
    }

    /**
     * Setter for <code>greygold.act_ru_execution.sequence_counter_</code>.
     */
    public void setSequenceCounter_(Long value) {
        set(18, value);
    }

    /**
     * Getter for <code>greygold.act_ru_execution.sequence_counter_</code>.
     */
    public Long getSequenceCounter_() {
        return (Long) get(18);
    }

    /**
     * Setter for <code>greygold.act_ru_execution.tenant_id_</code>.
     */
    public void setTenantId_(String value) {
        set(19, value);
    }

    /**
     * Getter for <code>greygold.act_ru_execution.tenant_id_</code>.
     */
    public String getTenantId_() {
        return (String) get(19);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record20 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row20<String, Integer, String, String, String, String, String, String, String, String, String, String, Boolean, Boolean, Boolean, Boolean, Integer, Integer, Long, String> fieldsRow() {
        return (Row20) super.fieldsRow();
    }

    @Override
    public Row20<String, Integer, String, String, String, String, String, String, String, String, String, String, Boolean, Boolean, Boolean, Boolean, Integer, Integer, Long, String> valuesRow() {
        return (Row20) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return ActRuExecution.ACT_RU_EXECUTION.ID_;
    }

    @Override
    public Field<Integer> field2() {
        return ActRuExecution.ACT_RU_EXECUTION.REV_;
    }

    @Override
    public Field<String> field3() {
        return ActRuExecution.ACT_RU_EXECUTION.ROOT_PROC_INST_ID_;
    }

    @Override
    public Field<String> field4() {
        return ActRuExecution.ACT_RU_EXECUTION.PROC_INST_ID_;
    }

    @Override
    public Field<String> field5() {
        return ActRuExecution.ACT_RU_EXECUTION.BUSINESS_KEY_;
    }

    @Override
    public Field<String> field6() {
        return ActRuExecution.ACT_RU_EXECUTION.PARENT_ID_;
    }

    @Override
    public Field<String> field7() {
        return ActRuExecution.ACT_RU_EXECUTION.PROC_DEF_ID_;
    }

    @Override
    public Field<String> field8() {
        return ActRuExecution.ACT_RU_EXECUTION.SUPER_EXEC_;
    }

    @Override
    public Field<String> field9() {
        return ActRuExecution.ACT_RU_EXECUTION.SUPER_CASE_EXEC_;
    }

    @Override
    public Field<String> field10() {
        return ActRuExecution.ACT_RU_EXECUTION.CASE_INST_ID_;
    }

    @Override
    public Field<String> field11() {
        return ActRuExecution.ACT_RU_EXECUTION.ACT_ID_;
    }

    @Override
    public Field<String> field12() {
        return ActRuExecution.ACT_RU_EXECUTION.ACT_INST_ID_;
    }

    @Override
    public Field<Boolean> field13() {
        return ActRuExecution.ACT_RU_EXECUTION.IS_ACTIVE_;
    }

    @Override
    public Field<Boolean> field14() {
        return ActRuExecution.ACT_RU_EXECUTION.IS_CONCURRENT_;
    }

    @Override
    public Field<Boolean> field15() {
        return ActRuExecution.ACT_RU_EXECUTION.IS_SCOPE_;
    }

    @Override
    public Field<Boolean> field16() {
        return ActRuExecution.ACT_RU_EXECUTION.IS_EVENT_SCOPE_;
    }

    @Override
    public Field<Integer> field17() {
        return ActRuExecution.ACT_RU_EXECUTION.SUSPENSION_STATE_;
    }

    @Override
    public Field<Integer> field18() {
        return ActRuExecution.ACT_RU_EXECUTION.CACHED_ENT_STATE_;
    }

    @Override
    public Field<Long> field19() {
        return ActRuExecution.ACT_RU_EXECUTION.SEQUENCE_COUNTER_;
    }

    @Override
    public Field<String> field20() {
        return ActRuExecution.ACT_RU_EXECUTION.TENANT_ID_;
    }

    @Override
    public String component1() {
        return getId_();
    }

    @Override
    public Integer component2() {
        return getRev_();
    }

    @Override
    public String component3() {
        return getRootProcInstId_();
    }

    @Override
    public String component4() {
        return getProcInstId_();
    }

    @Override
    public String component5() {
        return getBusinessKey_();
    }

    @Override
    public String component6() {
        return getParentId_();
    }

    @Override
    public String component7() {
        return getProcDefId_();
    }

    @Override
    public String component8() {
        return getSuperExec_();
    }

    @Override
    public String component9() {
        return getSuperCaseExec_();
    }

    @Override
    public String component10() {
        return getCaseInstId_();
    }

    @Override
    public String component11() {
        return getActId_();
    }

    @Override
    public String component12() {
        return getActInstId_();
    }

    @Override
    public Boolean component13() {
        return getIsActive_();
    }

    @Override
    public Boolean component14() {
        return getIsConcurrent_();
    }

    @Override
    public Boolean component15() {
        return getIsScope_();
    }

    @Override
    public Boolean component16() {
        return getIsEventScope_();
    }

    @Override
    public Integer component17() {
        return getSuspensionState_();
    }

    @Override
    public Integer component18() {
        return getCachedEntState_();
    }

    @Override
    public Long component19() {
        return getSequenceCounter_();
    }

    @Override
    public String component20() {
        return getTenantId_();
    }

    @Override
    public String value1() {
        return getId_();
    }

    @Override
    public Integer value2() {
        return getRev_();
    }

    @Override
    public String value3() {
        return getRootProcInstId_();
    }

    @Override
    public String value4() {
        return getProcInstId_();
    }

    @Override
    public String value5() {
        return getBusinessKey_();
    }

    @Override
    public String value6() {
        return getParentId_();
    }

    @Override
    public String value7() {
        return getProcDefId_();
    }

    @Override
    public String value8() {
        return getSuperExec_();
    }

    @Override
    public String value9() {
        return getSuperCaseExec_();
    }

    @Override
    public String value10() {
        return getCaseInstId_();
    }

    @Override
    public String value11() {
        return getActId_();
    }

    @Override
    public String value12() {
        return getActInstId_();
    }

    @Override
    public Boolean value13() {
        return getIsActive_();
    }

    @Override
    public Boolean value14() {
        return getIsConcurrent_();
    }

    @Override
    public Boolean value15() {
        return getIsScope_();
    }

    @Override
    public Boolean value16() {
        return getIsEventScope_();
    }

    @Override
    public Integer value17() {
        return getSuspensionState_();
    }

    @Override
    public Integer value18() {
        return getCachedEntState_();
    }

    @Override
    public Long value19() {
        return getSequenceCounter_();
    }

    @Override
    public String value20() {
        return getTenantId_();
    }

    @Override
    public ActRuExecutionRecord value1(String value) {
        setId_(value);
        return this;
    }

    @Override
    public ActRuExecutionRecord value2(Integer value) {
        setRev_(value);
        return this;
    }

    @Override
    public ActRuExecutionRecord value3(String value) {
        setRootProcInstId_(value);
        return this;
    }

    @Override
    public ActRuExecutionRecord value4(String value) {
        setProcInstId_(value);
        return this;
    }

    @Override
    public ActRuExecutionRecord value5(String value) {
        setBusinessKey_(value);
        return this;
    }

    @Override
    public ActRuExecutionRecord value6(String value) {
        setParentId_(value);
        return this;
    }

    @Override
    public ActRuExecutionRecord value7(String value) {
        setProcDefId_(value);
        return this;
    }

    @Override
    public ActRuExecutionRecord value8(String value) {
        setSuperExec_(value);
        return this;
    }

    @Override
    public ActRuExecutionRecord value9(String value) {
        setSuperCaseExec_(value);
        return this;
    }

    @Override
    public ActRuExecutionRecord value10(String value) {
        setCaseInstId_(value);
        return this;
    }

    @Override
    public ActRuExecutionRecord value11(String value) {
        setActId_(value);
        return this;
    }

    @Override
    public ActRuExecutionRecord value12(String value) {
        setActInstId_(value);
        return this;
    }

    @Override
    public ActRuExecutionRecord value13(Boolean value) {
        setIsActive_(value);
        return this;
    }

    @Override
    public ActRuExecutionRecord value14(Boolean value) {
        setIsConcurrent_(value);
        return this;
    }

    @Override
    public ActRuExecutionRecord value15(Boolean value) {
        setIsScope_(value);
        return this;
    }

    @Override
    public ActRuExecutionRecord value16(Boolean value) {
        setIsEventScope_(value);
        return this;
    }

    @Override
    public ActRuExecutionRecord value17(Integer value) {
        setSuspensionState_(value);
        return this;
    }

    @Override
    public ActRuExecutionRecord value18(Integer value) {
        setCachedEntState_(value);
        return this;
    }

    @Override
    public ActRuExecutionRecord value19(Long value) {
        setSequenceCounter_(value);
        return this;
    }

    @Override
    public ActRuExecutionRecord value20(String value) {
        setTenantId_(value);
        return this;
    }

    @Override
    public ActRuExecutionRecord values(String value1, Integer value2, String value3, String value4, String value5, String value6, String value7, String value8, String value9, String value10, String value11, String value12, Boolean value13, Boolean value14, Boolean value15, Boolean value16, Integer value17, Integer value18, Long value19, String value20) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ActRuExecutionRecord
     */
    public ActRuExecutionRecord() {
        super(ActRuExecution.ACT_RU_EXECUTION);
    }

    /**
     * Create a detached, initialised ActRuExecutionRecord
     */
    public ActRuExecutionRecord(String id_, Integer rev_, String rootProcInstId_, String procInstId_, String businessKey_, String parentId_, String procDefId_, String superExec_, String superCaseExec_, String caseInstId_, String actId_, String actInstId_, Boolean isActive_, Boolean isConcurrent_, Boolean isScope_, Boolean isEventScope_, Integer suspensionState_, Integer cachedEntState_, Long sequenceCounter_, String tenantId_) {
        super(ActRuExecution.ACT_RU_EXECUTION);

        setId_(id_);
        setRev_(rev_);
        setRootProcInstId_(rootProcInstId_);
        setProcInstId_(procInstId_);
        setBusinessKey_(businessKey_);
        setParentId_(parentId_);
        setProcDefId_(procDefId_);
        setSuperExec_(superExec_);
        setSuperCaseExec_(superCaseExec_);
        setCaseInstId_(caseInstId_);
        setActId_(actId_);
        setActInstId_(actInstId_);
        setIsActive_(isActive_);
        setIsConcurrent_(isConcurrent_);
        setIsScope_(isScope_);
        setIsEventScope_(isEventScope_);
        setSuspensionState_(suspensionState_);
        setCachedEntState_(cachedEntState_);
        setSequenceCounter_(sequenceCounter_);
        setTenantId_(tenantId_);
        resetChangedOnNotNull();
    }
}
