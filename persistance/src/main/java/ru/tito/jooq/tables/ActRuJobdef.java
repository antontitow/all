/*
 * This file is generated by jOOQ.
 */
package ru.tito.jooq.tables;


import java.util.Arrays;
import java.util.List;
import java.util.function.Function;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Function11;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Records;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.SelectField;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import ru.tito.jooq.Greygold;
import ru.tito.jooq.Indexes;
import ru.tito.jooq.Keys;
import ru.tito.jooq.tables.records.ActRuJobdefRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ActRuJobdef extends TableImpl<ActRuJobdefRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>greygold.act_ru_jobdef</code>
     */
    public static final ActRuJobdef ACT_RU_JOBDEF = new ActRuJobdef();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ActRuJobdefRecord> getRecordType() {
        return ActRuJobdefRecord.class;
    }

    /**
     * The column <code>greygold.act_ru_jobdef.id_</code>.
     */
    public final TableField<ActRuJobdefRecord, String> ID_ = createField(DSL.name("id_"), SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>greygold.act_ru_jobdef.rev_</code>.
     */
    public final TableField<ActRuJobdefRecord, Integer> REV_ = createField(DSL.name("rev_"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>greygold.act_ru_jobdef.proc_def_id_</code>.
     */
    public final TableField<ActRuJobdefRecord, String> PROC_DEF_ID_ = createField(DSL.name("proc_def_id_"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>greygold.act_ru_jobdef.proc_def_key_</code>.
     */
    public final TableField<ActRuJobdefRecord, String> PROC_DEF_KEY_ = createField(DSL.name("proc_def_key_"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>greygold.act_ru_jobdef.act_id_</code>.
     */
    public final TableField<ActRuJobdefRecord, String> ACT_ID_ = createField(DSL.name("act_id_"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>greygold.act_ru_jobdef.job_type_</code>.
     */
    public final TableField<ActRuJobdefRecord, String> JOB_TYPE_ = createField(DSL.name("job_type_"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>greygold.act_ru_jobdef.job_configuration_</code>.
     */
    public final TableField<ActRuJobdefRecord, String> JOB_CONFIGURATION_ = createField(DSL.name("job_configuration_"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>greygold.act_ru_jobdef.suspension_state_</code>.
     */
    public final TableField<ActRuJobdefRecord, Integer> SUSPENSION_STATE_ = createField(DSL.name("suspension_state_"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>greygold.act_ru_jobdef.job_priority_</code>.
     */
    public final TableField<ActRuJobdefRecord, Long> JOB_PRIORITY_ = createField(DSL.name("job_priority_"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>greygold.act_ru_jobdef.tenant_id_</code>.
     */
    public final TableField<ActRuJobdefRecord, String> TENANT_ID_ = createField(DSL.name("tenant_id_"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>greygold.act_ru_jobdef.deployment_id_</code>.
     */
    public final TableField<ActRuJobdefRecord, String> DEPLOYMENT_ID_ = createField(DSL.name("deployment_id_"), SQLDataType.VARCHAR(64), this, "");

    private ActRuJobdef(Name alias, Table<ActRuJobdefRecord> aliased) {
        this(alias, aliased, null);
    }

    private ActRuJobdef(Name alias, Table<ActRuJobdefRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>greygold.act_ru_jobdef</code> table reference
     */
    public ActRuJobdef(String alias) {
        this(DSL.name(alias), ACT_RU_JOBDEF);
    }

    /**
     * Create an aliased <code>greygold.act_ru_jobdef</code> table reference
     */
    public ActRuJobdef(Name alias) {
        this(alias, ACT_RU_JOBDEF);
    }

    /**
     * Create a <code>greygold.act_ru_jobdef</code> table reference
     */
    public ActRuJobdef() {
        this(DSL.name("act_ru_jobdef"), null);
    }

    public <O extends Record> ActRuJobdef(Table<O> child, ForeignKey<O, ActRuJobdefRecord> key) {
        super(child, key, ACT_RU_JOBDEF);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Greygold.GREYGOLD;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.ACT_IDX_JOBDEF_PROC_DEF_ID, Indexes.ACT_IDX_JOBDEF_TENANT_ID);
    }

    @Override
    public UniqueKey<ActRuJobdefRecord> getPrimaryKey() {
        return Keys.ACT_RU_JOBDEF_PKEY;
    }

    @Override
    public ActRuJobdef as(String alias) {
        return new ActRuJobdef(DSL.name(alias), this);
    }

    @Override
    public ActRuJobdef as(Name alias) {
        return new ActRuJobdef(alias, this);
    }

    @Override
    public ActRuJobdef as(Table<?> alias) {
        return new ActRuJobdef(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public ActRuJobdef rename(String name) {
        return new ActRuJobdef(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ActRuJobdef rename(Name name) {
        return new ActRuJobdef(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public ActRuJobdef rename(Table<?> name) {
        return new ActRuJobdef(name.getQualifiedName(), null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<String, Integer, String, String, String, String, String, Integer, Long, String, String> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Function)}.
     */
    public <U> SelectField<U> mapping(Function11<? super String, ? super Integer, ? super String, ? super String, ? super String, ? super String, ? super String, ? super Integer, ? super Long, ? super String, ? super String, ? extends U> from) {
        return convertFrom(Records.mapping(from));
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Class,
     * Function)}.
     */
    public <U> SelectField<U> mapping(Class<U> toType, Function11<? super String, ? super Integer, ? super String, ? super String, ? super String, ? super String, ? super String, ? super Integer, ? super Long, ? super String, ? super String, ? extends U> from) {
        return convertFrom(toType, Records.mapping(from));
    }
}
