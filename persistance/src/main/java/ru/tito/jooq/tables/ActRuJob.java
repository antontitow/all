/*
 * This file is generated by jOOQ.
 */
package ru.tito.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import ru.tito.jooq.Greygold;
import ru.tito.jooq.Indexes;
import ru.tito.jooq.Keys;
import ru.tito.jooq.tables.records.ActRuJobRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ActRuJob extends TableImpl<ActRuJobRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>greygold.act_ru_job</code>
     */
    public static final ActRuJob ACT_RU_JOB = new ActRuJob();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ActRuJobRecord> getRecordType() {
        return ActRuJobRecord.class;
    }

    /**
     * The column <code>greygold.act_ru_job.id_</code>.
     */
    public final TableField<ActRuJobRecord, String> ID_ = createField(DSL.name("id_"), SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>greygold.act_ru_job.rev_</code>.
     */
    public final TableField<ActRuJobRecord, Integer> REV_ = createField(DSL.name("rev_"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>greygold.act_ru_job.type_</code>.
     */
    public final TableField<ActRuJobRecord, String> TYPE_ = createField(DSL.name("type_"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>greygold.act_ru_job.lock_exp_time_</code>.
     */
    public final TableField<ActRuJobRecord, LocalDateTime> LOCK_EXP_TIME_ = createField(DSL.name("lock_exp_time_"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>greygold.act_ru_job.lock_owner_</code>.
     */
    public final TableField<ActRuJobRecord, String> LOCK_OWNER_ = createField(DSL.name("lock_owner_"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>greygold.act_ru_job.exclusive_</code>.
     */
    public final TableField<ActRuJobRecord, Boolean> EXCLUSIVE_ = createField(DSL.name("exclusive_"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>greygold.act_ru_job.execution_id_</code>.
     */
    public final TableField<ActRuJobRecord, String> EXECUTION_ID_ = createField(DSL.name("execution_id_"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>greygold.act_ru_job.process_instance_id_</code>.
     */
    public final TableField<ActRuJobRecord, String> PROCESS_INSTANCE_ID_ = createField(DSL.name("process_instance_id_"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>greygold.act_ru_job.process_def_id_</code>.
     */
    public final TableField<ActRuJobRecord, String> PROCESS_DEF_ID_ = createField(DSL.name("process_def_id_"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>greygold.act_ru_job.process_def_key_</code>.
     */
    public final TableField<ActRuJobRecord, String> PROCESS_DEF_KEY_ = createField(DSL.name("process_def_key_"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>greygold.act_ru_job.retries_</code>.
     */
    public final TableField<ActRuJobRecord, Integer> RETRIES_ = createField(DSL.name("retries_"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>greygold.act_ru_job.exception_stack_id_</code>.
     */
    public final TableField<ActRuJobRecord, String> EXCEPTION_STACK_ID_ = createField(DSL.name("exception_stack_id_"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>greygold.act_ru_job.exception_msg_</code>.
     */
    public final TableField<ActRuJobRecord, String> EXCEPTION_MSG_ = createField(DSL.name("exception_msg_"), SQLDataType.VARCHAR(4000), this, "");

    /**
     * The column <code>greygold.act_ru_job.failed_act_id_</code>.
     */
    public final TableField<ActRuJobRecord, String> FAILED_ACT_ID_ = createField(DSL.name("failed_act_id_"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>greygold.act_ru_job.duedate_</code>.
     */
    public final TableField<ActRuJobRecord, LocalDateTime> DUEDATE_ = createField(DSL.name("duedate_"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>greygold.act_ru_job.repeat_</code>.
     */
    public final TableField<ActRuJobRecord, String> REPEAT_ = createField(DSL.name("repeat_"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>greygold.act_ru_job.repeat_offset_</code>.
     */
    public final TableField<ActRuJobRecord, Long> REPEAT_OFFSET_ = createField(DSL.name("repeat_offset_"), SQLDataType.BIGINT.defaultValue(DSL.field(DSL.raw("0"), SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>greygold.act_ru_job.handler_type_</code>.
     */
    public final TableField<ActRuJobRecord, String> HANDLER_TYPE_ = createField(DSL.name("handler_type_"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>greygold.act_ru_job.handler_cfg_</code>.
     */
    public final TableField<ActRuJobRecord, String> HANDLER_CFG_ = createField(DSL.name("handler_cfg_"), SQLDataType.VARCHAR(4000), this, "");

    /**
     * The column <code>greygold.act_ru_job.deployment_id_</code>.
     */
    public final TableField<ActRuJobRecord, String> DEPLOYMENT_ID_ = createField(DSL.name("deployment_id_"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>greygold.act_ru_job.suspension_state_</code>.
     */
    public final TableField<ActRuJobRecord, Integer> SUSPENSION_STATE_ = createField(DSL.name("suspension_state_"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field(DSL.raw("1"), SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>greygold.act_ru_job.job_def_id_</code>.
     */
    public final TableField<ActRuJobRecord, String> JOB_DEF_ID_ = createField(DSL.name("job_def_id_"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>greygold.act_ru_job.priority_</code>.
     */
    public final TableField<ActRuJobRecord, Long> PRIORITY_ = createField(DSL.name("priority_"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.field(DSL.raw("0"), SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>greygold.act_ru_job.sequence_counter_</code>.
     */
    public final TableField<ActRuJobRecord, Long> SEQUENCE_COUNTER_ = createField(DSL.name("sequence_counter_"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>greygold.act_ru_job.tenant_id_</code>.
     */
    public final TableField<ActRuJobRecord, String> TENANT_ID_ = createField(DSL.name("tenant_id_"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>greygold.act_ru_job.create_time_</code>.
     */
    public final TableField<ActRuJobRecord, LocalDateTime> CREATE_TIME_ = createField(DSL.name("create_time_"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>greygold.act_ru_job.last_failure_log_id_</code>.
     */
    public final TableField<ActRuJobRecord, String> LAST_FAILURE_LOG_ID_ = createField(DSL.name("last_failure_log_id_"), SQLDataType.VARCHAR(64), this, "");

    private ActRuJob(Name alias, Table<ActRuJobRecord> aliased) {
        this(alias, aliased, null);
    }

    private ActRuJob(Name alias, Table<ActRuJobRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>greygold.act_ru_job</code> table reference
     */
    public ActRuJob(String alias) {
        this(DSL.name(alias), ACT_RU_JOB);
    }

    /**
     * Create an aliased <code>greygold.act_ru_job</code> table reference
     */
    public ActRuJob(Name alias) {
        this(alias, ACT_RU_JOB);
    }

    /**
     * Create a <code>greygold.act_ru_job</code> table reference
     */
    public ActRuJob() {
        this(DSL.name("act_ru_job"), null);
    }

    public <O extends Record> ActRuJob(Table<O> child, ForeignKey<O, ActRuJobRecord> key) {
        super(child, key, ACT_RU_JOB);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Greygold.GREYGOLD;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.ACT_IDX_JOB_EXCEPTION, Indexes.ACT_IDX_JOB_EXECUTION_ID, Indexes.ACT_IDX_JOB_HANDLER, Indexes.ACT_IDX_JOB_HANDLER_TYPE, Indexes.ACT_IDX_JOB_JOB_DEF_ID, Indexes.ACT_IDX_JOB_PROCINST, Indexes.ACT_IDX_JOB_TENANT_ID);
    }

    @Override
    public UniqueKey<ActRuJobRecord> getPrimaryKey() {
        return Keys.ACT_RU_JOB_PKEY;
    }

    @Override
    public List<ForeignKey<ActRuJobRecord, ?>> getReferences() {
        return Arrays.asList(Keys.ACT_RU_JOB__ACT_FK_JOB_EXCEPTION);
    }

    private transient ActGeBytearray _actGeBytearray;

    /**
     * Get the implicit join path to the <code>greygold.act_ge_bytearray</code>
     * table.
     */
    public ActGeBytearray actGeBytearray() {
        if (_actGeBytearray == null)
            _actGeBytearray = new ActGeBytearray(this, Keys.ACT_RU_JOB__ACT_FK_JOB_EXCEPTION);

        return _actGeBytearray;
    }

    @Override
    public ActRuJob as(String alias) {
        return new ActRuJob(DSL.name(alias), this);
    }

    @Override
    public ActRuJob as(Name alias) {
        return new ActRuJob(alias, this);
    }

    @Override
    public ActRuJob as(Table<?> alias) {
        return new ActRuJob(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public ActRuJob rename(String name) {
        return new ActRuJob(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ActRuJob rename(Name name) {
        return new ActRuJob(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public ActRuJob rename(Table<?> name) {
        return new ActRuJob(name.getQualifiedName(), null);
    }
}
