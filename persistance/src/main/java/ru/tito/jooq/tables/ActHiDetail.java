/*
 * This file is generated by jOOQ.
 */
package ru.tito.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import ru.tito.jooq.Greygold;
import ru.tito.jooq.Indexes;
import ru.tito.jooq.Keys;
import ru.tito.jooq.tables.records.ActHiDetailRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ActHiDetail extends TableImpl<ActHiDetailRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>greygold.act_hi_detail</code>
     */
    public static final ActHiDetail ACT_HI_DETAIL = new ActHiDetail();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ActHiDetailRecord> getRecordType() {
        return ActHiDetailRecord.class;
    }

    /**
     * The column <code>greygold.act_hi_detail.id_</code>.
     */
    public final TableField<ActHiDetailRecord, String> ID_ = createField(DSL.name("id_"), SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>greygold.act_hi_detail.type_</code>.
     */
    public final TableField<ActHiDetailRecord, String> TYPE_ = createField(DSL.name("type_"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>greygold.act_hi_detail.proc_def_key_</code>.
     */
    public final TableField<ActHiDetailRecord, String> PROC_DEF_KEY_ = createField(DSL.name("proc_def_key_"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>greygold.act_hi_detail.proc_def_id_</code>.
     */
    public final TableField<ActHiDetailRecord, String> PROC_DEF_ID_ = createField(DSL.name("proc_def_id_"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>greygold.act_hi_detail.root_proc_inst_id_</code>.
     */
    public final TableField<ActHiDetailRecord, String> ROOT_PROC_INST_ID_ = createField(DSL.name("root_proc_inst_id_"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>greygold.act_hi_detail.proc_inst_id_</code>.
     */
    public final TableField<ActHiDetailRecord, String> PROC_INST_ID_ = createField(DSL.name("proc_inst_id_"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>greygold.act_hi_detail.execution_id_</code>.
     */
    public final TableField<ActHiDetailRecord, String> EXECUTION_ID_ = createField(DSL.name("execution_id_"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>greygold.act_hi_detail.case_def_key_</code>.
     */
    public final TableField<ActHiDetailRecord, String> CASE_DEF_KEY_ = createField(DSL.name("case_def_key_"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>greygold.act_hi_detail.case_def_id_</code>.
     */
    public final TableField<ActHiDetailRecord, String> CASE_DEF_ID_ = createField(DSL.name("case_def_id_"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>greygold.act_hi_detail.case_inst_id_</code>.
     */
    public final TableField<ActHiDetailRecord, String> CASE_INST_ID_ = createField(DSL.name("case_inst_id_"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>greygold.act_hi_detail.case_execution_id_</code>.
     */
    public final TableField<ActHiDetailRecord, String> CASE_EXECUTION_ID_ = createField(DSL.name("case_execution_id_"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>greygold.act_hi_detail.task_id_</code>.
     */
    public final TableField<ActHiDetailRecord, String> TASK_ID_ = createField(DSL.name("task_id_"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>greygold.act_hi_detail.act_inst_id_</code>.
     */
    public final TableField<ActHiDetailRecord, String> ACT_INST_ID_ = createField(DSL.name("act_inst_id_"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>greygold.act_hi_detail.var_inst_id_</code>.
     */
    public final TableField<ActHiDetailRecord, String> VAR_INST_ID_ = createField(DSL.name("var_inst_id_"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>greygold.act_hi_detail.name_</code>.
     */
    public final TableField<ActHiDetailRecord, String> NAME_ = createField(DSL.name("name_"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>greygold.act_hi_detail.var_type_</code>.
     */
    public final TableField<ActHiDetailRecord, String> VAR_TYPE_ = createField(DSL.name("var_type_"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>greygold.act_hi_detail.rev_</code>.
     */
    public final TableField<ActHiDetailRecord, Integer> REV_ = createField(DSL.name("rev_"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>greygold.act_hi_detail.time_</code>.
     */
    public final TableField<ActHiDetailRecord, LocalDateTime> TIME_ = createField(DSL.name("time_"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "");

    /**
     * The column <code>greygold.act_hi_detail.bytearray_id_</code>.
     */
    public final TableField<ActHiDetailRecord, String> BYTEARRAY_ID_ = createField(DSL.name("bytearray_id_"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>greygold.act_hi_detail.double_</code>.
     */
    public final TableField<ActHiDetailRecord, Double> DOUBLE_ = createField(DSL.name("double_"), SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>greygold.act_hi_detail.long_</code>.
     */
    public final TableField<ActHiDetailRecord, Long> LONG_ = createField(DSL.name("long_"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>greygold.act_hi_detail.text_</code>.
     */
    public final TableField<ActHiDetailRecord, String> TEXT_ = createField(DSL.name("text_"), SQLDataType.VARCHAR(4000), this, "");

    /**
     * The column <code>greygold.act_hi_detail.text2_</code>.
     */
    public final TableField<ActHiDetailRecord, String> TEXT2_ = createField(DSL.name("text2_"), SQLDataType.VARCHAR(4000), this, "");

    /**
     * The column <code>greygold.act_hi_detail.sequence_counter_</code>.
     */
    public final TableField<ActHiDetailRecord, Long> SEQUENCE_COUNTER_ = createField(DSL.name("sequence_counter_"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>greygold.act_hi_detail.tenant_id_</code>.
     */
    public final TableField<ActHiDetailRecord, String> TENANT_ID_ = createField(DSL.name("tenant_id_"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>greygold.act_hi_detail.operation_id_</code>.
     */
    public final TableField<ActHiDetailRecord, String> OPERATION_ID_ = createField(DSL.name("operation_id_"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>greygold.act_hi_detail.removal_time_</code>.
     */
    public final TableField<ActHiDetailRecord, LocalDateTime> REMOVAL_TIME_ = createField(DSL.name("removal_time_"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>greygold.act_hi_detail.initial_</code>.
     */
    public final TableField<ActHiDetailRecord, Boolean> INITIAL_ = createField(DSL.name("initial_"), SQLDataType.BOOLEAN, this, "");

    private ActHiDetail(Name alias, Table<ActHiDetailRecord> aliased) {
        this(alias, aliased, null);
    }

    private ActHiDetail(Name alias, Table<ActHiDetailRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>greygold.act_hi_detail</code> table reference
     */
    public ActHiDetail(String alias) {
        this(DSL.name(alias), ACT_HI_DETAIL);
    }

    /**
     * Create an aliased <code>greygold.act_hi_detail</code> table reference
     */
    public ActHiDetail(Name alias) {
        this(alias, ACT_HI_DETAIL);
    }

    /**
     * Create a <code>greygold.act_hi_detail</code> table reference
     */
    public ActHiDetail() {
        this(DSL.name("act_hi_detail"), null);
    }

    public <O extends Record> ActHiDetail(Table<O> child, ForeignKey<O, ActHiDetailRecord> key) {
        super(child, key, ACT_HI_DETAIL);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Greygold.GREYGOLD;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.ACT_IDX_HI_DETAIL_ACT_INST, Indexes.ACT_IDX_HI_DETAIL_BYTEAR, Indexes.ACT_IDX_HI_DETAIL_CASE_EXEC, Indexes.ACT_IDX_HI_DETAIL_CASE_INST, Indexes.ACT_IDX_HI_DETAIL_NAME, Indexes.ACT_IDX_HI_DETAIL_PROC_DEF_KEY, Indexes.ACT_IDX_HI_DETAIL_PROC_INST, Indexes.ACT_IDX_HI_DETAIL_RM_TIME, Indexes.ACT_IDX_HI_DETAIL_ROOT_PI, Indexes.ACT_IDX_HI_DETAIL_TASK_BYTEAR, Indexes.ACT_IDX_HI_DETAIL_TASK_ID, Indexes.ACT_IDX_HI_DETAIL_TENANT_ID, Indexes.ACT_IDX_HI_DETAIL_TIME, Indexes.ACT_IDX_HI_DETAIL_VAR_INST_ID);
    }

    @Override
    public UniqueKey<ActHiDetailRecord> getPrimaryKey() {
        return Keys.ACT_HI_DETAIL_PKEY;
    }

    @Override
    public ActHiDetail as(String alias) {
        return new ActHiDetail(DSL.name(alias), this);
    }

    @Override
    public ActHiDetail as(Name alias) {
        return new ActHiDetail(alias, this);
    }

    @Override
    public ActHiDetail as(Table<?> alias) {
        return new ActHiDetail(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public ActHiDetail rename(String name) {
        return new ActHiDetail(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ActHiDetail rename(Name name) {
        return new ActHiDetail(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public ActHiDetail rename(Table<?> name) {
        return new ActHiDetail(name.getQualifiedName(), null);
    }
}
